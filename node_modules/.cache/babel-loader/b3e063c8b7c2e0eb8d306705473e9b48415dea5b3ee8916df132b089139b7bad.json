{"ast":null,"code":"var _jsxFileName = \"/Users/ashahane/infra/GCPExperiments/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [resourceData, setResourceData] = useState(null);\n  useEffect(() => {\n    // Replace 'your-jwt-token' with the actual JWT token you have\n    const jwtToken = \"<your-jwt-token>\"; // Replace with your JWT token\n    const url = \"http://localhost:8000/api/resource\";\n\n    // Make the API request with the JWT token in the Authorization header\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n        \"Content-Type\": \"application/json\" // Add Content-Type header if needed\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json(); // Parse the response data as JSON\n    }).then(data => {\n      // Process the response data\n      console.log(\"Resource data:\", data);\n      setResourceData(data.data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Resource Data: \", resourceData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9G8sp/Sf0mqarwsB7NPj7mRlCrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","resourceData","setResourceData","jwtToken","url","fetch","method","headers","Authorization","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashahane/infra/GCPExperiments/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const [resourceData, setResourceData] = useState(null);\n\n  useEffect(() => {\n    // Replace 'your-jwt-token' with the actual JWT token you have\n    const jwtToken = \"<your-jwt-token>\"; // Replace with your JWT token\n    const url = \"http://localhost:8000/api/resource\";\n\n    // Make the API request with the JWT token in the Authorization header\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n        \"Content-Type\": \"application/json\", // Add Content-Type header if needed\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json(); // Parse the response data as JSON\n      })\n      .then((data) => {\n        // Process the response data\n        console.log(\"Resource data:\", data);\n        setResourceData(data.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Resource Data: {resourceData}</p>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,QAAQ,GAAG,kBAAkB,CAAC,CAAC;IACrC,MAAMC,GAAG,GAAG,oCAAoC;;IAEhD;IACAC,KAAK,CAACD,GAAG,EAAE;MACTE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,QAAS,EAAC;QACnC,cAAc,EAAE,kBAAkB,CAAE;MACtC;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCZ,eAAe,CAACY,IAAI,CAACA,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA;MAAAqB,QAAA,GAAG,iBAAe,EAAClB,YAAY;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}